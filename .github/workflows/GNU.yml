name: GNU

on: [push, pull_request]

jobs:
  gnu:
    name: Run GNU tests
    runs-on: ubuntu-latest
    steps:
      # Checks out a copy of your repository on the ubuntu-latest machine
    - name: Checkout code uutil
      uses: actions/checkout@v2
      with:
        path: 'uutils'
    - name: Chechout GNU coreutils
      uses: actions/checkout@v2
      with:
        repository: 'coreutils/coreutils'
        path: 'gnu'
    - name: Chechout GNU corelib
      uses: actions/checkout@v2
      with:
        repository: 'coreutils/gnulib'
        path: 'gnulib'
        fetch-depth: 0 # gnu gets upset if gnulib is a shallow checkout
    - name: Install `rust` toolchain
      uses: actions-rs/toolchain@v1
      with:
        toolchain: stable
        default: true
        profile: minimal # minimal component installation (ie, no documentation)
        components: rustfmt
    - name: Build binaries
      shell: bash
      run: |
        sudo apt-get update
        sudo apt-get install autoconf autopoint bison texinfo gperf gcc g++ gdb python-pyinotify expect python3-sphinx
        pushd uutils
        make PROFILE=release
        BUILDDIR="$PWD/target/release/"
        popd
        GNULIB_SRCDIR="$PWD/gnulib"
        pushd gnu/
        ./bootstrap --gnulib-srcdir="$GNULIB_SRCDIR"
        ./configure --quiet --disable-gcc-warnings
        # Change the PATH in the Makefile to test the uutils coreutils instead of the GNU coreutils 
        sed -i "s/^[[:blank:]]*PATH=.*/  PATH='${BUILDDIR//\//\\/}\$(PATH_SEPARATOR)'\"\$\$PATH\" \\\/" Makefile
        sed -i 's| tr | /usr/bin/tr |' tests/init.sh
        make
        test -f "${BUILDDIR}/getlimits" || cp src/getlimits "${BUILDDIR}"
    - name: Run GNU tests
      shell: bash
      run: |
        BUILDDIR="${PWD}/uutils/target/release"
        GNULIB_DIR="${PWD}/gnulib"
        pushd gnu
        for each_test in $(find tests/ -regex '.*\(sh\|pl\)');
        do
          timeout -k 60 600 make check TESTS="$each_test" SUBDIRS=. RUN_EXPENSIVE_TESTS=yes RUN_VERY_EXPENSIVE_TESTS=yes
          if [[ $? -lt 124 ]]
          then
            runable_tests="${each_test} ${runable_tests}";
          else
            hang_tests="${each_test} ${hang_tests}"
          fi
        done
        echo $hang_tests >uutils_hanging_tests.txt
        make check TESTS="${runable_tests}" SUBDIRS=. RUN_EXPENSIVE_TESTS=yes RUN_VERY_EXPENSIVE_TESTS=yes VERBOSE=no || :
    - uses: actions/upload-artifact@v2
      with:
        name: hanging-tests
        path: gnu/uutils_hanging_tests.txt
